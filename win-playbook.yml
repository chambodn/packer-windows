- hosts: packer
  gather_facts: false
  vars:
    windows_unicode_language: en-GB
    # https://docs.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11)?redirectedfrom=MSDN
    windows_timezone: Romance Standard Time
    windows_updates_enabled: true
    windows_pstools_url: https://download.sysinternals.com/files/PSTools.zip
    windows_system_dir: C:\Windows\System32
    windows_temp_dir: C:\Users\packer\AppData\Local\Temp
  tasks:
    # https://docs.ansible.com/ansible/latest/user_guide/windows_performance.html
    - name: Improve PowerShell performance
      win_shell: |
        # NGEN powershell assembly, improves startup time of powershell by 10x
        $old_path = $env:path
        try {
          $env:path = [Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory()
          [AppDomain]::CurrentDomain.GetAssemblies() | % {
            if (! $_.location) {continue}
            $Name = Split-Path $_.location -leaf
            if ($Name.startswith("Microsoft.PowerShell.")) {
              Write-Progress -Activity "Native Image Installation" -Status "$name"
              ngen install $_.location | % {"`t$_"}
            }
          }
        } finally {
          $env:path = $old_path
        }
    
    - name: 'Ensure few packages are installed'
      win_chocolatey:
        name: '{{ item }}'
        state: present
      loop:
        - firefox
        - notepadplusplus
        - vcbuildtools
        - devcon.portable
      register: deploy_choco_package
      until: deploy_choco_package is not failed
      retries: 5
      
    - name: 'Ensure applicative user is present'
      win_user:
        name: app_user
        password: P@ssW0rd1
        state: present
        groups:
          - Administrators
    
    - name: 'Install all security updates with automatic reboots (if needed)'
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
      become: yes
      become_method: runas
      become_user: SYSTEM
      register: install_securitycritical_updates_result
      until: 'install_securitycritical_updates_result is success'
      retries: 3
      delay: 5
      async: 1800
      poll: 0
      when: windows_updates_enabled
    
    - name: 'Set timezone to ''Romance Standard Time'' (GMT+01:00)'
      win_timezone:
        timezone: '{{ windows_timezone }}'
    
    - name: 'Change unicode language'
      win_region:
        unicode_language: '{{ windows_unicode_language }}'
      register: result
      
    - name: 'Ensure the required NuGet package provider version is installed'
      win_shell: 'Find-PackageProvider -Name Nuget -ForceBootstrap -IncludeDependencies -Force'
      
    - name: 'Install PowerShellGet module'
      win_shell: 'Install-Module PowerShellGet -Force -AllowClobber'
      
    - name: 'Install LoopbackAdapter module'
      win_psmodule:
        name: '{{ item }}'
        allow_clobber: yes
        skip_publisher_check: yes
        state: latest
      loop:
        - LoopbackAdapter
            
    - name: 'Download and install pstools'
      win_shell: "Invoke-WebRequest -Uri '{{ windows_pstools_url }}' -OutFile '{{ windows_temp_dir }}\\pstools.zip'\nMicrosoft.PowerShell.Archive\\Expand-Archive -Path '{{ windows_temp_dir }}\\pstools.zip' -DestinationPath '{{ windows_temp_dir }}\\pstools'\nMove-Item -Path '{{ windows_temp_dir }}\\pstools\\psexec.exe' '{{ windows_system_dir }}\\psexec.exe'\nRemove-Item -Path '{{ windows_temp_dir }}\\pstools' -Recurse\n"
      
    - name: 'Create few convenient things (including UAC)'
      win_regedit:
        path: '{{ item.path }}'
        name: '{{ item.name }}'
        data: '{{ item.data }}'
        type: '{{ item.type }}'
      loop:
        - path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'
          name: Hidden
          data: 1
          type: dword
        - path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced'
          name: HideFileExt
          data: 0
          type: dword
        - path: 'HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\System'
          name: ConsentPromptBehaviorAdmin
          data: 0
          type: dword

    - name: 'Windows updates - check on async task'
      async_status:
        jid: '{{ install_securitycritical_updates_result.ansible_job_id }}'
      register: job_result
      until: 'job_result.finished and install_securitycritical_updates_result is success'
      retries: 30
      delay: 60
      become: yes
      become_method: runas
      become_user: SYSTEM
      when: windows_updates_enabled
    
    - win_reboot:
      when: 'result.restart_required or (install_securitycritical_updates_result is defined and install_securitycritical_updates_result.reboot_required is defined)'
  
    # https://docs.ansible.com/ansible/latest/user_guide/windows_performance.html
    - name: generate native .NET images for CPU
      win_dotnet_ngen:
  
